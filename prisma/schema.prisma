// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Usuario {
  Id            String           @id @default(uuid())
  Nombre        String?
  Correo        String?           @unique
  Avatar        String?
  Contrasena    String?
  Estado        Boolean          @default(true)
  FechaRegistro DateTime         @default(now())

  // Relaciones
  Progresos     UsuarioProgreso[]
  Inscripciones InscripcionUsuario[]
}

model UsuarioProgreso {
  Id              String                   @id @default(uuid())
  UsuarioId       String
  Puntos          Decimal                  @default(0)
  Racha           Int                      @default(0)
  RetosCompletados Int                     @default(0)
  Estado          Boolean                  @default(true)
  FechaInicio     DateTime                 @default(now())

  // Relaciones
  Usuario         Usuario                  @relation(fields: [UsuarioId], references: [Id])
  Registros       RegistroUsuarioProgreso[]
}

model RegistroUsuarioProgreso {
  Id                String          @id @default(uuid())
  UsuarioProgresoId String
  Punto             Decimal         @default(0)
  Racha             Int             @default(0)
  RetosCompletados  Int             @default(0)
  Estado            Boolean         @default(true)
  Fecha             DateTime        @default(now())

  UsuarioProgreso   UsuarioProgreso @relation(fields: [UsuarioProgresoId], references: [Id])
}

model Academia {
  Id            String      @id @default(uuid())
  Nombre        String
  Descripcion   String?
  Avatar        String?
  TipoAcademia  EnumTipoAcademia
  Dificultad    EnumDificultad
  Estado        Boolean     @default(true)
  FechaRegistro DateTime    @default(now())

  Cursos        Curso[]
}

model Curso {
  Id            String          @id @default(uuid())
  Nombre        String
  Descripcion   String?
  Avatar        String?
  VideoURL      String?
  AcademiaId    String
  Dificultad    EnumDificultad
  Instruccional String?
  Estado        Boolean         @default(true)
  FechaRegistro DateTime        @default(now())

  Academia      Academia        @relation(fields: [AcademiaId], references: [Id])
  Sesiones      SesionCurso[]
  Inscripciones InscripcionUsuario[]
}

model InscripcionUsuario {
  Id             String          @id @default(uuid())
  UsuarioId      String
  CursoId        String?
  SesionCursoId  String?
  MaterialSesionCursoId String?

  Avance         Decimal?        @default(0)
  Estado         Boolean         @default(true)
  FechaRegistro  DateTime        @default(now())

  Usuario        Usuario         @relation(fields: [UsuarioId], references: [Id])
  Curso          Curso?          @relation(fields: [CursoId], references: [Id])
  SesionCurso    SesionCurso?    @relation(fields: [SesionCursoId], references: [Id])
  MaterialSesion MaterialSesionCurso? @relation(fields: [MaterialSesionCursoId], references: [Id])
}

model SesionCurso {
  Id              String                @id @default(uuid())
  Nombre          String
  Descripcion     String?
  Avatar          String?
  VideoURL        String?
  LecturaURL      String?
  CursoId         String
  DuracionLectura Decimal?              @default(0)
  DuracionVideo   Decimal?              @default(0)
  Instruccional   String?
  Estado          Boolean               @default(true)
  FechaRegistro   DateTime              @default(now())

  Curso           Curso                 @relation(fields: [CursoId], references: [Id])
  Materiales      MaterialSesionCurso[]

  // ðŸ”¥ Campo inverso para InscripcionUsuario
  Inscripciones   InscripcionUsuario[]
}

model MaterialSesionCurso {
  Id                String          @id @default(uuid())
  IdentificadorManual String?
  SesionCursoId     String
  Nombre            String
  Avance            Decimal?        @default(0)
  Avatar            String?
  ArchivoURL        String?
  TipoMaterial      EnumTipoMaterial
  Instruccional     String?
  Estado            Boolean         @default(true)
  FechaRegistro     DateTime        @default(now())

  SesionCurso       SesionCurso     @relation(fields: [SesionCursoId], references: [Id])
  Inscripciones     InscripcionUsuario[]
}

enum EnumTipoAcademia {
  Academia
  Laboratorio
}

enum EnumDificultad {
  Novato
  Intermedio
  Avanzado
}

enum EnumTipoMaterial {
  Documento
  Prueba
  Examen
  Laboratorio
}